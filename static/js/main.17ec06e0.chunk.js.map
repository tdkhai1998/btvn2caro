{"version":3,"sources":["serviceWorker.js","constants/ActionTypes.js","reducers/subRecuders.js","reducers/rootReducer.js","Components/Square.js","Components/Board.js","actions/allActions.js","container/boardContainer.js","Components/Controls.js","container/controlContainer.js","Components/SideBar.js","container/sideBarContainer.js","Components/Nav.js","container/loginContainer.js","container/registerContainer.js","container/homeContainer.js","helper.js","index.js","middleWare.js","Components/Game.js"],"names":["Boolean","window","location","hostname","match","SQUARES","TURN","CHANGE","SET","WINNER_LINE","ADD","REMOVE","HISTORY","initialState","Array","fill","rootReducer","combineReducers","squares","state","action","type","types","newState","slice","index","value","turn","dirMark","arr","isRemove","forEach","element","TYPE","winnerLine","dir","isSorted","history","newArr","push","isFetching","console","log","login","user","token","Square","props","status","ok","onClick","className","src","alt","str1","str2","Board","row","i","square","j","key","includes","fetch","require","setTurn","RemoveWinner","connect","dispatch","addToBoard","Controls","restart","sorted","SideBar","style","maxHeight","overflow","paddingBottom","reverse","indexHis","map","item","postion","Math","floor","index2","length","id","disabled","listTurn","from","to","RemoveHis","NavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","stateLogin","loginForm","username","password","his","method","body","JSON","stringify","headers","then","res","json","result","parse","code","alert","catch","e","Row","marginTop","Col","md","background","padding","borderRadius","boxShadow","Form","onSubmit","preventDefault","autoComplete","textAlign","Group","controlId","Label","Control","onChange","target","changeUsername","placeholder","changePass","Button","variant","float","Spinner","animation","register","repassword","logout2","logout","Name","Table","bordered","hover","margin","width","rowSpan","height","countDirection","count","block","mark","check","x","y","countByTrend","trend","haveWinner","myWidth","Number","myHeight","store","createStore","rootReducers","applyMiddleware","thunk","next","getState","change","changeBoardFromHis","ChangeHisIndex","a","exact","path","Container","component","LoginForm","Home","RegisterForm","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17ec06e0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const SQUARES = {\r\n  ADD: 'Add',\r\n  REMOVE: 'Remove',\r\n  MANY: 'dfghj',\r\n  RESET: 'resset'\r\n};\r\nexport const TURN = {\r\n  CHANGE: 'Change',\r\n  SET: 'set'\r\n};\r\nexport const WINNER_LINE = {\r\n  ADD: 'have winner',\r\n  REMOVE: ' NR'\r\n};\r\nexport const HISTORY = {\r\n  ADD: '=sfsr',\r\n  REMOVE: ' sfgs',\r\n  RESET: 'fdgh',\r\n  CHANGE_INDEX: 'dfghjfghfddgh'\r\n};\r\nexport const SORT = 'dfg';\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nconst initialState = Array(400).fill(null);\r\n\r\nexport const turn = (state = false, action) => {\r\n  const TYPE = types.TURN;\r\n  switch (action.type) {\r\n    case TYPE.CHANGE: {\r\n      return !state;\r\n    }\r\n    case TYPE.SET: {\r\n      return action.turn;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const winnerLine = (state = { arr: [], dir: -1 }, action) => {\r\n  const TYPE = types.WINNER_LINE;\r\n  switch (action.type) {\r\n    case TYPE.ADD: {\r\n      return action.arr;\r\n    }\r\n    case TYPE.REMOVE:\r\n      return { arr: [], dir: -1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const squares = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SQUARES.ADD: {\r\n      const newState = state.slice();\r\n      newState[action.index] = {\r\n        value: action.turn ? 'X' : 'O',\r\n        dirMark: -1\r\n      };\r\n      return newState;\r\n    }\r\n    case types.SQUARES.REMOVE: {\r\n      const newState = state.slice();\r\n      newState[action.index] = null;\r\n      return newState;\r\n    }\r\n    case types.SQUARES.MANY: {\r\n      const { arr, isRemove } = action;\r\n      const newState = state.slice();\r\n      arr.forEach(element => {\r\n        if (isRemove) newState[element.index] = null;\r\n        else\r\n          newState[element.index] = {\r\n            value: element.turn ? 'X' : 'O',\r\n            dirMark: -1\r\n          };\r\n      });\r\n      return newState;\r\n    }\r\n    case types.SQUARES.RESET: {\r\n      return Array(400).fill(null);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const isSorted = (state = false, action) => {\r\n  switch (action.type) {\r\n    case types.SORT: {\r\n      return !state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const history = (state = { arr: [], index: -1 }, action) => {\r\n  const { arr, index } = state;\r\n  switch (action.type) {\r\n    case types.HISTORY.ADD: {\r\n      const newArr = arr.slice(0, index + 1);\r\n      newArr.push({ index: action.index, turn: action.turn });\r\n      return {\r\n        arr: newArr,\r\n        index: index + 1\r\n      };\r\n    }\r\n    case types.HISTORY.CHANGE_INDEX: {\r\n      return {\r\n        arr,\r\n        index: action.index\r\n      };\r\n    }\r\n    case types.HISTORY.RESET: {\r\n      return { arr: [], index: -1 };\r\n    }\r\n    case types.HISTORY.REMOVE:\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const isFetching = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'DONE': {\r\n      return false;\r\n    }\r\n    case 'DOING': {\r\n      console.log('doinh');\r\n      return true;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const login = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LOGIN': {\r\n      return action.index;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const user = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'User_add': {\r\n      console.log('ad vo ne', action.user, action.token);\r\n      return {\r\n        user: action.user,\r\n        token: action.token\r\n      };\r\n    }\r\n    case 'User_reset': {\r\n      return null;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport {\r\n  squares,\r\n  turn,\r\n  winnerLine,\r\n  isSorted,\r\n  history,\r\n  isFetching,\r\n  login,\r\n  user\r\n} from './subRecuders';\r\n\r\nconst rootReducer = combineReducers({\r\n  squares,\r\n  turn,\r\n  winnerLine,\r\n  isSorted,\r\n  history,\r\n  isFetching,\r\n  login,\r\n  user\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\n\r\nconst Square = props => {\r\n  const { status, dir, ok, value, onClick } = props;\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={`square  ${status}`}\r\n      onClick={() => onClick()}\r\n    >\r\n      {(() => {\r\n        if (value === null) return <img src=\"./Anh1.png\" alt=\"dgf\" />;\r\n        if (value.value === 'O') {\r\n          if (ok === true) {\r\n            const str1 = `./Anh2.${dir + 1}.png`;\r\n            return <img src={str1} alt=\"sfg\" />;\r\n          }\r\n          return <img src=\"./Anh2.png\" alt=\"sfg\" />;\r\n        }\r\n        if (ok === true) {\r\n          const str2 = `./Anh3.${dir + 1}.png`;\r\n          return <img src={str2} alt=\"sfg\" />;\r\n        }\r\n        return <img src=\"./Anh3.png\" alt=\"sfg\" />;\r\n      })()}\r\n    </button>\r\n  );\r\n};\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst Board = props => {\r\n  const { onClick, squares, turn, winnerLine } = props;\r\n  const row = [];\r\n  for (let i = 0; i < 20; i += 1) {\r\n    const square = [];\r\n    for (let j = 0; j < 20; j += 1) {\r\n      const index = i * 20 + j;\r\n      square.push(\r\n        <Square\r\n          key={j}\r\n          value={squares[index]}\r\n          dir={winnerLine.dir}\r\n          ok={winnerLine.arr.includes(index)}\r\n          onClick={() => {\r\n            onClick(index, turn);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    row.push(\r\n      <div key={i} className=\"board-row\">\r\n        {square}\r\n      </div>\r\n    );\r\n  }\r\n  return <div>{row}</div>;\r\n};\r\nexport default Board;\r\n","import {\r\n  SQUARES,\r\n  WINNER_LINE,\r\n  TURN,\r\n  HISTORY,\r\n  SORT\r\n} from '../constants/ActionTypes';\r\n\r\nconst fetch = require('node-fetch');\r\n\r\nexport const addToBoard = (index, turn) => ({\r\n  type: SQUARES.ADD,\r\n  index,\r\n  turn\r\n});\r\nexport const removeFromBoard = index => ({\r\n  type: SQUARES.REMOVE,\r\n  index\r\n});\r\nexport const reStart = () => ({\r\n  type: SQUARES.RESET\r\n});\r\nexport const changeBoardFromHis = (arr, isRemove) => ({\r\n  type: SQUARES.MANY,\r\n  arr,\r\n  isRemove\r\n});\r\nexport const changeTurn = () => ({\r\n  type: TURN.CHANGE\r\n});\r\nexport const setTurn = turn => ({\r\n  type: TURN.SET,\r\n  turn\r\n});\r\nexport const winner = arr => ({\r\n  type: WINNER_LINE.ADD,\r\n  arr\r\n});\r\nexport const RemoveWinner = () => ({\r\n  type: WINNER_LINE.REMOVE\r\n});\r\nexport const addToHis = (index, turn) => ({\r\n  type: HISTORY.ADD,\r\n  index,\r\n  turn\r\n});\r\nexport const RemoveHis = (from, to) => ({\r\n  type: HISTORY.REMOVE,\r\n  from,\r\n  to\r\n});\r\nexport const ReSetHis = () => ({\r\n  type: HISTORY.RESET\r\n});\r\nexport const ChangeHisIndex = index => ({\r\n  type: HISTORY.CHANGE_INDEX,\r\n  index\r\n});\r\nexport const sort = () => ({\r\n  type: SORT\r\n});\r\nexport const register = (username, password, repassword, his) => dispatch => {\r\n  dispatch({ type: 'DOING' });\r\n  return fetch('https://khaicaro.herokuapp.com/user/register', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ username, password, repassword }),\r\n    headers: { 'Content-Type': 'application/json' }\r\n  })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      const result = JSON.parse(res);\r\n      dispatch({ type: 'DONE' });\r\n      if (result.code === 1) {\r\n        alert('Đăng ký thành công');\r\n        his.push('/login');\r\n      } else {\r\n        alert('Đăng ký thành công');\r\n        his.push('/reghister');\r\n      }\r\n    })\r\n    .catch(e => {});\r\n};\r\nexport const login = (username, password, his) => dispatch => {\r\n  dispatch({ type: 'SET_LOGIN', index: 1 });\r\n  console.log('doing');\r\n  return fetch('https://khaicaro.herokuapp.com/user/login', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ username, password }),\r\n\r\n    headers: { 'Content-Type': 'application/json' }\r\n  })\r\n    .then(res => {\r\n      dispatch({ type: 'SET_LOGIN', index: 0 });\r\n      return res.json();\r\n    })\r\n    .then(res => {\r\n      console.log(res);\r\n      const result = JSON.parse(res);\r\n\r\n      if (result.code === 1) {\r\n        dispatch({ type: 'User_add', user: result.user, token: result.token });\r\n        his.push('/home');\r\n        alert('Đăng nhập thành công');\r\n      } else {\r\n        his.push('/login');\r\n        alert('Thất bại');\r\n      }\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n};\r\nexport const logout = his => dispatch => {\r\n  console.log('djng');\r\n  return fetch('https://khaicaro.herokuapp.com/user/logout')\r\n    .then(res => {\r\n      dispatch({ type: 'User_reset' });\r\n      return res.json();\r\n    })\r\n    .then(res => {\r\n      const result = JSON.parse(res);\r\n      if (result.code === 1) {\r\n        his.push('/login');\r\n      }\r\n    })\r\n    .catch(e => {});\r\n};\r\n","import { connect } from 'react-redux';\r\n\r\nimport Board from '../Components/Board';\r\nimport { addToBoard } from '../actions/allActions';\r\n\r\nconst mapStateToProps = state => ({\r\n  squares: state.squares,\r\n  turn: state.turn,\r\n  winnerLine: state.winnerLine\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: (index, turn) => dispatch(addToBoard(index, turn))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Board);\r\n","import React from 'react';\r\n\r\nconst Controls = props => {\r\n  const { isSorted, turn, restart, sorted } = props;\r\n  return (\r\n    <div>\r\n      <h1>{turn ? 'NEXT TURN :X' : 'NEXT TURN :O'}</h1>\r\n      <button type=\"button\" className=\"button\" onClick={() => restart()}>\r\n        RESTART\r\n      </button>\r\n      <button type=\"button\" className=\"button\" onClick={() => sorted()}>\r\n        {isSorted ? 'SORTED' : 'SORT'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Controls;\r\n","import { connect } from 'react-redux';\r\nimport Controls from '../Components/Controls';\r\nimport {\r\n  reStart,\r\n  setTurn,\r\n  sort,\r\n  ReSetHis,\r\n  RemoveWinner\r\n} from '../actions/allActions';\r\n\r\nconst mapStateToProps = state => ({\r\n  isSorted: state.isSorted,\r\n  turn: state.turn\r\n});\r\nconst restart = dispatch => {\r\n  dispatch(reStart());\r\n  dispatch(setTurn(false));\r\n  dispatch(RemoveWinner());\r\n  dispatch(ReSetHis());\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  restart: () => restart(dispatch),\r\n  sorted: () => dispatch(sort())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import React from 'react';\r\n\r\nconst SideBar = props => {\r\n  const listTurn = () => {\r\n    const { history, onClick, isSorted } = props;\r\n    const arr = !isSorted ? history.arr.slice().reverse() : history.arr.slice();\r\n    const indexHis = history.index;\r\n    return arr.map((item, index) => {\r\n      const postion = `( ${item.index % 20} , ${Math.floor(\r\n        item.index / 20\r\n      )} ) `;\r\n      const index2 = !isSorted ? arr.length - 1 - index : index;\r\n      const id = index;\r\n      if (index2 === indexHis) {\r\n        return (\r\n          <button\r\n            type=\"button\"\r\n            disabled\r\n            className=\"myButton\"\r\n            key={id}\r\n            onClick={() => onClick(indexHis, index2)}\r\n          >\r\n            {index2} TURN {`${item.turn ? 'X' : 'O'} ${postion}`}\r\n          </button>\r\n        );\r\n      }\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className=\"myButton\"\r\n          key={id}\r\n          onClick={() => onClick(indexHis, index2)}\r\n        >\r\n          {index2} TURN {`${item.turn ? 'X' : 'O'}  ${postion}`}\r\n        </button>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ maxHeight: 450, overflow: 'auto', paddingBottom: 20 }}>\r\n      {listTurn()}\r\n    </div>\r\n  );\r\n};\r\nexport default SideBar;\r\n","import { connect } from 'react-redux';\r\n\r\nimport SideBar from '../Components/SideBar';\r\nimport { RemoveHis } from '../actions/allActions';\r\n\r\nconst mapStateToProps = state => ({\r\n  history: state.history,\r\n  turn: state.turn,\r\n  winnerLine: state.winnerLine,\r\n  isSorted: state.isSorted\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: (from, to) => dispatch(RemoveHis(from, to))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SideBar);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"/home\">React-Bootstrap</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link>\r\n            <Link to=\"home\">Home</Link>\r\n          </Nav.Link>\r\n          <Nav.Link>\r\n            <Link to=\"game\">Board</Link>\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Form, Row, Col, Button, Spinner } from 'react-bootstrap';\r\nimport { login } from '../actions/allActions';\r\n\r\nconst LoginForm = props => {\r\n  const style = {\r\n    marginTop: 150\r\n  };\r\n  const styleForm = {\r\n    background: 'azure',\r\n    padding: 20,\r\n    borderRadius: 5,\r\n    boxShadow: '10px 13px 123px -1px rgba(112,106,112,1)'\r\n  };\r\n  const { stateLogin, loginForm } = props;\r\n\r\n  let username;\r\n  let password;\r\n  const changeUsername = e => {\r\n    username = e.target.value;\r\n  };\r\n  const changePass = e => {\r\n    password = e.target.value;\r\n  };\r\n  const res = e => {\r\n    e.preventDefault();\r\n    loginForm(username, password, props.history);\r\n  };\r\n\r\n  return (\r\n    <Row style={style}>\r\n      <Col md=\"4\" />\r\n      <Col md=\"4\" style={styleForm}>\r\n        <Form onSubmit={res} method=\"POST\" autoComplete=\"off\">\r\n          <h2 style={{ textAlign: 'center' }}>LOGIN</h2>\r\n          <Form.Group controlId=\"formGroupEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              onChange={e => changeUsername(e)}\r\n              placeholder=\"Enter email\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={e => changePass(e)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\" style={{ float: 'right' }}>\r\n            {stateLogin === 1 && <Spinner animation=\"border\" />}\r\n            Submitc\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  stateLogin: state.login\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loginForm: (username, password, his) =>\r\n    dispatch(login(username, password, his))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginForm);\r\n","import React from 'react';\r\nimport { Form, Row, Col, Button, Spinner } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { register } from '../actions/allActions';\r\n\r\nconst RegisterForm = props => {\r\n  const style = {\r\n    marginTop: 150\r\n  };\r\n  const { isFetching, history } = props;\r\n\r\n  const styleForm = {\r\n    background: 'gray',\r\n    padding: 20,\r\n    borderRadius: 5\r\n  };\r\n  let username;\r\n  let password;\r\n  let repassword;\r\n  const changeUsername = e => {\r\n    username = e.target.value;\r\n  };\r\n  const changePass = e => {\r\n    password = e.target.value;\r\n  };\r\n  const changeRePass = e => {\r\n    repassword = e.target.value;\r\n  };\r\n  const re = e => {\r\n    e.preventDefault();\r\n    //  console.log(username, password, repassword);\r\n    props.register(username, password, repassword, history);\r\n  };\r\n  if (isFetching) {\r\n    username = '';\r\n    password = '';\r\n    repassword = '';\r\n  }\r\n  return (\r\n    <Row style={style}>\r\n      <Col md=\"4\" />\r\n      <Col md=\"4\" style={styleForm}>\r\n        <Form onSubmit={re} disabled={isFetching ? 'disabled' : 'k'}>\r\n          <h2 style={{ textAlign: 'center' }}>SIGN UP</h2>\r\n          <Form.Group controlId=\"formGroupEmail\" disabled={isFetching}>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              disabled={isFetching}\r\n              onChange={changeUsername}\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={username}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              disabled={isFetching}\r\n              onChange={changePass}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n            <Form.Label>Re- 9Password</Form.Label>\r\n            <Form.Control\r\n              disabled={isFetching}\r\n              onChange={changeRePass}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={repassword}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            disabled={isFetching}\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            style={{ float: 'right' }}\r\n          >\r\n            {isFetching && <Spinner animation=\"border\" />}\r\n            Submitabc\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  isFetching: state.isFetching\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  register: (username, password, repassword, history) =>\r\n    dispatch(register(username, password, repassword, history))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RegisterForm);\r\n","import React from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport NAV from '../Components/Nav';\r\n\r\nimport { logout } from '../actions/allActions';\r\n\r\nconst Home = props => {\r\n  const { Name, logout2, history, user } = props;\r\n  console.log(user);\r\n  return (\r\n    <div>\r\n      {!user ? history.push('/login') : ''}\r\n      <NAV />\r\n      <Table\r\n        bordered\r\n        hover\r\n        style={{\r\n          background: 'gray',\r\n          margin: '0 auto',\r\n          marginTop: 150,\r\n          width: 150\r\n        }}\r\n      >\r\n        <tbody>\r\n          <tr>\r\n            <td rowSpan=\"2\">\r\n              <img alt=\"\" src=\"avt.png\" style={{ height: 150, width: 150 }} />\r\n            </td>\r\n            <td>Name: {Name}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ textAlign: 'center' }}>\r\n              <Button\r\n                style={{ margin: '0 auto' }}\r\n                onClick={() => logout2(history)}\r\n              >\r\n                LOGOUT\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    user: state.user\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  logout2: his => dispatch(logout(his))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","function countDirection(dir, i, square, width, height) {\r\n  let count = 0;\r\n  const turn = square[i].value;\r\n  let block = 0;\r\n  const mark = [];\r\n  const check = (x, y) => x >= 0 && x < width && (y >= 0 && y < height);\r\n  const countByTrend = trend => {\r\n    let x = i % width;\r\n    let y = Math.floor(i / width);\r\n    let index = i;\r\n    while (\r\n      check(x, y) &&\r\n      square[index] != null &&\r\n      square[index].value === turn\r\n    ) {\r\n      count += 1;\r\n      mark.push(index);\r\n      x += dir[trend][0];\r\n      y += dir[trend][1];\r\n      index = y * width + x;\r\n    }\r\n    if (check(x, y) && square[index] != null && square[index].value !== turn) {\r\n      block += 1;\r\n    }\r\n  };\r\n  countByTrend(0); //  up trend\r\n  countByTrend(1); //  down trend\r\n  count -= 1;\r\n  if (count === 5 && block === 2) return false;\r\n  if (count < 5) return false;\r\n  return mark;\r\n}\r\nfunction haveWinner(square, i, width = 20, height = 20) {\r\n  const myWidth = Number(width);\r\n  const myHeight = Number(height);\r\n  const dir = [\r\n    [[-1, -1], [1, 1]],\r\n    [[0, -1], [0, +1]],\r\n    [[1, -1], [-1, 1]],\r\n    [[-1, 0], [1, 0]]\r\n  ];\r\n  for (let j = 0; j < 4; j += 1) {\r\n    const result = countDirection(dir[j], i, square, myWidth, myHeight);\r\n    if (result !== false)\r\n      // have a winner\r\n      return {\r\n        arr: result,\r\n        dir: j\r\n      };\r\n  }\r\n  return false;\r\n}\r\nexport default haveWinner;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { Container, Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport thunk from 'redux-thunk';\r\nimport ReactDOM from 'react-dom';\r\nimport { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport rootReducers from './reducers/rootReducer';\r\nimport Game from './Components/Game';\r\nimport LoginForm from './container/loginContainer';\r\nimport RegisterForm from './container/registerContainer';\r\nimport Home from './container/homeContainer';\r\n\r\nimport mid from './middleWare';\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk, mid));\r\nconsole.log(store.getState());\r\nconst a = (\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <Switch>\r\n        <Route exact path=\"/Game\">\r\n          <Game />\r\n        </Route>\r\n\r\n        <Route path=\"/login\" component={LoginForm} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/\">\r\n          <Redirect to=\"/home\" />\r\n        </Route>\r\n        <Route path=\"/register\" component={RegisterForm} />\r\n      </Switch>\r\n    </Provider>\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(a, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import * as types from './constants/ActionTypes';\r\nimport {\r\n  changeTurn,\r\n  winner,\r\n  addToHis,\r\n  changeBoardFromHis,\r\n  setTurn,\r\n  ChangeHisIndex,\r\n  RemoveWinner\r\n} from './actions/allActions';\r\nimport haveWinner from './helper';\r\n\r\nexport default store => next => action => {\r\n  if (action.type === types.SQUARES.ADD) {\r\n    const { squares, winnerLine } = store.getState();\r\n    if (squares[action.index] === null && winnerLine.dir === -1) {\r\n      store.dispatch(changeTurn());\r\n      squares[action.index] = { value: action.turn ? 'X' : 'O', dirMark: -1 };\r\n      const result = haveWinner(squares, action.index);\r\n      if (result !== false) {\r\n        store.dispatch(winner(result));\r\n      }\r\n      store.dispatch(addToHis(action.index, action.turn));\r\n      next(action);\r\n    }\r\n  } else if (action.type === types.HISTORY.REMOVE) {\r\n    const { from, to } = action;\r\n    let { history } = store.getState();\r\n    const change =\r\n      from > to\r\n        ? {\r\n            arr: history.arr.slice(to + 1, from + 1),\r\n            isRemove: true\r\n          }\r\n        : {\r\n            arr: history.arr.slice(from, to + 1),\r\n            isRemove: false\r\n          };\r\n    store.dispatch(changeBoardFromHis(change.arr, change.isRemove));\r\n    store.dispatch(ChangeHisIndex(to));\r\n    history = store.getState().history;\r\n    store.dispatch(setTurn(!history.arr[to].turn));\r\n    store.dispatch(RemoveWinner());\r\n    next(action);\r\n  } else {\r\n    next(action);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Board from '../container/boardContainer';\r\nimport Controls from '../container/controlContainer';\r\nimport SideBar from '../container/sideBarContainer';\r\nimport NavBar from './Nav';\r\n\r\nexport default function Game() {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Container style={{ marginTop: 20 }}>\r\n        <Row>\r\n          <Col md=\"auto\">\r\n            <Board />\r\n          </Col>\r\n          <Col md=\"auto\" style={{ background: 'gray' }}>\r\n            <Controls />\r\n            <SideBar />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}