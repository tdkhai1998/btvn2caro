{"version":3,"sources":["serviceWorker.js","Components/Square.js","Components/Board.js","Components/BusinessLogic.js","Components/Game.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Square","style","className","this","props","status","onClick","value","src","alt","dirMark","str1","str2","React","Component","Board","row","x","selectedIndex","y","Math","floor","i","n","squares","index","m","j","push","key","result","square","arr","isSorted","history","slice","reverse","indexHis","indexHistory","map","item","postion","index2","length","disabled","amazing","turn","print","paddingTop","width","restart","sort","maxHeight","overflow","paddingBottom","listTurn","haveWinner","height","Number","dir","countDirection","count","block","mark","check","countByTrend","trend","Game","Array","fill","setState","forEach","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dcf7d763.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nclass Square extends React.Component{\r\n  style={\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <button\r\n        className={\"square \" + this.props.status}\r\n        onClick={() => this.props.onClick()}\r\n      >\r\n        { (()=>{\r\n          if(this.props.value===null)\r\n            return <img src=\"./Anh1.png\" alt=\"dgf\"></img>\r\n          else if(this.props.value.value==='O'){\r\n            if(this.props.value.dirMark!==-1){\r\n              var  str1=\"./Anh2.\"+(this.props.value.dirMark+1)+\".png\";\r\n              return <img src={str1} alt=\"sfg\"></img>\r\n            }\r\n            return <img src=\"./Anh2.png\" alt=\"sfg\"></img>\r\n          }\r\n          else{\r\n            if(this.props.value.dirMark!==-1){\r\n              var  str2=\"./Anh3.\"+(this.props.value.dirMark+1)+\".png\";\r\n              return <img src={str2} alt=\"sfg\"></img>\r\n            }\r\n             return <img src=\"./Anh3.png\" alt=\"sfg\"></img>\r\n          }\r\n        })()\r\n        }\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from \"./Square\";\r\n\r\nclass Board extends React.Component {\r\n    print() {\r\n        var row = []\r\n        let x = this.props.selectedIndex % 20;\r\n        let y = Math.floor(this.props.selectedIndex / 20);\r\n        for (var i = 0; i < this.props.n; i++) {\r\n            var squares = []\r\n            for (var j = 0; j < this.props.m; j++) {\r\n                const index = i * this.props.m + j;\r\n                if (i === y || j === x) {\r\n                    squares.push(<Square key={j} result={this.props.result} status=\"todam\" value={this.props.square[index]} onClick={() => { this.props.onClick(index) }} />)\r\n                }\r\n                else {\r\n                    squares.push(<Square key={j} result={this.props.result} value={this.props.square[index]} onClick={() => { this.props.onClick(index) }} />)\r\n                }\r\n            }\r\n            row.push(<div key={i} className=\"board-row\">{squares}</div>)\r\n        }\r\n        return row\r\n    }\r\n    listTurn() {\r\n        var arr = !this.props.isSorted ? this.props.history.slice().reverse() : this.props.history.slice();\r\n        var indexHis = this.props.indexHistory;\r\n        return arr.map((item, index) => {\r\n            var postion = \"( \" + (item.index % 20) + \" , \" + Math.floor((item.index / 20)) + \" ) \";\r\n            let index2 = !this.props.isSorted ? arr.length - 1 - index : index;\r\n            if (index2 === indexHis) {\r\n                return <button disabled className=\"myButton\" key={index} onClick={() => this.props.amazing(index2)}>{index2} TURN {(item.turn ? 'X' : 'O') + ' ' + postion}</button>\r\n            }\r\n            return <button className=\"myButton\" key={index} onClick={() => this.props.amazing(index2)}> {index2} TURN {(item.turn ? 'X' : 'O') + ' ' + postion}</button>\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"flex-container\">\r\n                    <div>{this.print()}</div>\r\n                    <div style={{ paddingTop: 10, width: 500 }}>\r\n                        <div style={{ width: 250 }}>{!this.props.result ? (\"TURN \" + (this.props.turn ? \"X\" : \"O\")) : ((this.props.turn ? \"O\" : \"X\") + \" WON!!!\")}</div>\r\n                        <button className=\"button\" onClick={() => this.props.restart()}> RESTART</button>\r\n                        <button className=\"button\" onClick={() => this.props.sort()}> {this.props.isSorted ? 'SORTED' : 'SORT'}</button>\r\n                        <div style={{ maxHeight: 450, overflow: 'auto', paddingBottom: 20 }}> {this.listTurn()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Board;","function haveWinner(square, i, width, height){\r\n    width=Number(width); height=Number(height);\r\n    const dir=[[[-1,-1], [1,1]],[[0,-1],[0,+1]],[[1,-1],[-1,1]],[[-1,0],[1,0]]];\r\n    for(var j=0;j<4;j++){\r\n        var result=countDirection(dir[j],i,square,width, height);\r\n        if(result!==false)// have a winner\r\n            return {\r\n                arr: result,\r\n                dir: j\r\n            }\r\n    }\r\n    return false;\r\n}\r\nfunction countDirection(dir,i,square, width, height){\r\n  \r\n    var count=0, turn=square[i].value, block=0;\r\n    var mark=[];\r\n    var check=(x,y)=>(x>=0&&x<width) && (y>=0&&y<height);\r\n    var countByTrend=(trend)=>{\r\n        var x = i % width , y = Math.floor(i/width);\r\n        var index=i;\r\n        while(check(x,y) && square[index]!=null &&square[index].value===turn){\r\n            count++;\r\n            mark.push(index);\r\n            x+=dir[trend][0];\r\n            y+=dir[trend][1];\r\n            index=y*width+x;\r\n        }\r\n        if(check(x,y) && square[index]!=null && square[index].value!==turn){\r\n            block++;\r\n        }\r\n    }\r\n    countByTrend(0);//up trend\r\n    countByTrend(1);//down trend\r\n    count--;\r\n    console.log(count);\r\n    if(count===5 && block===2) return false\r\n    if(count<5) return false;\r\n    return mark;\r\n}\r\nexport {\r\n    haveWinner\r\n} ","import React from 'react';\r\nimport Board from './Board';\r\nimport { haveWinner } from './BusinessLogic';\r\n\r\nconst n = 20;\r\nconst m = 20;\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            square: Array(n * m).fill(null),\r\n            turn: true,\r\n            result: false,\r\n            history: [],\r\n            indexHistory: -1,\r\n            selectedIndex: -1\r\n        }\r\n    }\r\n    restart() {\r\n        this.setState({\r\n            square: Array(n * m).fill(null),\r\n            turn: true,\r\n            result: false,\r\n            history: [],\r\n            indexHistory: -1,\r\n            isSorted: false\r\n        })\r\n    }\r\n    onClick(i) {\r\n        if (!this.state.result && this.state.square[i] === null) {\r\n            var history = this.state.history.slice();\r\n            var square = this.state.square.slice();\r\n            if (this.state.indexHistory < (history.length - 1)) {//ĐÁNH TRONG QUÁ KHỨ THÌ CẮT BỎ \r\n                history = history.slice(0, this.state.indexHistory + 1);\r\n            }\r\n            square[i] = { value: this.state.turn ? 'X' : 'O', dirMark: -1 }\r\n            var result = haveWinner(square, i, m, n);\r\n            if (result !== false) {\r\n                result.arr.forEach((j) => {\r\n                    square[j].dirMark = result.dir;\r\n                });\r\n            }\r\n            history.push({ index: i, turn: this.state.turn });\r\n            this.setState({\r\n                square: square,\r\n                turn: !this.state.turn,\r\n                history: history,\r\n                indexHistory: history.length - 1,\r\n                result: result !== false ? true : false,\r\n                selectedIndex: i\r\n            });\r\n        }\r\n    }\r\n    amazing(index) {\r\n        var result = false;\r\n        if (index < 0 || this.state.indexHistory === index) return;\r\n        var square = this.state.square.slice();\r\n        square.forEach(i => {\r\n            if (i) i.dirMark = -1;\r\n        })\r\n        var history = this.state.history.slice();\r\n        if (index > this.state.indexHistory) {\r\n            for (let i = index; i > this.state.indexHistory; i--) {\r\n                square[history[i].index] = { value: history[i].turn ? 'X' : 'O', dirMark: -1 }\r\n            }\r\n            result = haveWinner(square, history[index].index, m, n);\r\n            if (result !== false) {\r\n                result.arr.forEach((j) => {\r\n                    square[j].dirMark = result.dir;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            for (let i = index + 1; i <= this.state.indexHistory; i++) {\r\n                square[history[i].index] = null;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            indexHistory: index,\r\n            square: square,\r\n            history: history,\r\n            turn: !history[index].turn,\r\n            selectedIndex: history[index].index,\r\n            result: result !== false ? true : false\r\n        })\r\n    }\r\n    sort() {\r\n        this.setState({\r\n            isSorted: !this.state.isSorted\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Board n={n} m={m} square={this.state.square} turn={this.state.turn}\r\n                result={this.state.result}\r\n                onClick={(i) => this.onClick(i)}\r\n                restart={() => this.restart()}\r\n                history={this.state.history}\r\n                indexHistory={this.state.indexHistory}\r\n                amazing={(index) => this.amazing(index)}\r\n                selectedIndex={this.state.selectedIndex}\r\n                isSorted={this.state.isSorted}\r\n                sort={() => this.sort()}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Game from './Components/Game';\n\nReactDOM.render(<Game/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}