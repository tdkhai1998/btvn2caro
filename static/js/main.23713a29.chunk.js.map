{"version":3,"sources":["serviceWorker.js","Components/Square.js","Components/Board.js","Components/BusinessLogic.js","Components/Game.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Square","props","status","value","type","className","onClick","src","alt","dirMark","str1","str2","Board","this","selectedIndex","height","width","result","square","row","x","y","Math","floor","i","squares","j","index","push","key","isSorted","history","indexHistory","amazing","arr","slice","reverse","indexHis","map","item","postion","index2","length","id","disabled","turn","restart","sort","print","style","paddingTop","maxHeight","overflow","paddingBottom","listTurn","React","Component","countDirection","dir","count","block","mark","check","countByTrend","trend","haveWinner","myWidth","Number","myHeight","Game","Array","fill","forEach","setState","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.23713a29.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst Square = props => {\r\n  const { status, value } = props;\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={`square  ${status}`}\r\n      onClick={() => props.onClick()}\r\n    >\r\n      {(() => {\r\n        if (value === null) return <img src=\"./Anh1.png\" alt=\"dgf\" />;\r\n        if (value.value === 'O') {\r\n          if (value.dirMark !== -1) {\r\n            const str1 = `./Anh2.${value.dirMark + 1}.png`;\r\n            return <img src={str1} alt=\"sfg\" />;\r\n          }\r\n          return <img src=\"./Anh2.png\" alt=\"sfg\" />;\r\n        }\r\n        if (value.dirMark !== -1) {\r\n          const str2 = `./Anh3.${value.dirMark + 1}.png`;\r\n          return <img src={str2} alt=\"sfg\" />;\r\n        }\r\n        return <img src=\"./Anh3.png\" alt=\"sfg\" />;\r\n      })()}\r\n    </button>\r\n  );\r\n};\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends React.Component {\r\n  print() {\r\n    const {\r\n      selectedIndex,\r\n      height,\r\n      width,\r\n      result,\r\n      square,\r\n      onClick\r\n    } = this.props;\r\n    const row = [];\r\n    const x = selectedIndex % 20;\r\n    const y = Math.floor(selectedIndex / 20);\r\n    for (let i = 0; i < height; i += 1) {\r\n      const squares = [];\r\n      for (let j = 0; j < width; j += 1) {\r\n        const index = i * width + j;\r\n        if (i === y || j === x) {\r\n          squares.push(\r\n            <Square\r\n              key={j}\r\n              result={result}\r\n              status=\"todam\"\r\n              value={square[index]}\r\n              onClick={() => {\r\n                onClick(index);\r\n              }}\r\n            />\r\n          );\r\n        } else {\r\n          squares.push(\r\n            <Square\r\n              key={j}\r\n              result={result}\r\n              value={square[index]}\r\n              onClick={() => {\r\n                onClick(index);\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n      row.push(\r\n        <div key={i} className=\"board-row\">\r\n          {squares}\r\n        </div>\r\n      );\r\n    }\r\n    return row;\r\n  }\r\n\r\n  listTurn() {\r\n    const { isSorted, history, indexHistory, amazing, width } = this.props;\r\n    const arr = !isSorted ? history.slice().reverse() : history.slice();\r\n    const indexHis = indexHistory;\r\n    return arr.map((item, index) => {\r\n      const postion = `( ${item.index % width} , ${Math.floor(\r\n        item.index / width\r\n      )} ) `;\r\n      const index2 = !isSorted ? arr.length - 1 - index : index;\r\n      const id = index;\r\n      if (index2 === indexHis) {\r\n        return (\r\n          <button\r\n            type=\"button\"\r\n            disabled\r\n            className=\"myButton\"\r\n            key={id}\r\n            onClick={() => amazing(index2)}\r\n          >\r\n            {index2} TURN {`${item.turn ? 'X' : 'O'} ${postion}`}\r\n          </button>\r\n        );\r\n      }\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className=\"myButton\"\r\n          key={id}\r\n          onClick={() => amazing(index2)}\r\n        >\r\n          {index2} TURN {`${item.turn ? 'X' : 'O'}  ${postion}`}\r\n        </button>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { result, turn, restart, sort, isSorted } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"flex-container\">\r\n          <div>{this.print()}</div>\r\n          <div style={{ paddingTop: 10, width: 500 }}>\r\n            <div style={{ width: 250 }}>\r\n              {!result\r\n                ? `TURN ${turn ? 'X' : 'O'}`\r\n                : `${turn ? 'O' : 'X'}  WON!!!`}\r\n            </div>\r\n            <button type=\"button\" className=\"button\" onClick={() => restart()}>\r\n              RESTART\r\n            </button>\r\n            <button type=\"button\" className=\"button\" onClick={() => sort()}>\r\n              {isSorted ? 'SORTED' : 'SORT'}\r\n            </button>\r\n            <div\r\n              style={{ maxHeight: 450, overflow: 'auto', paddingBottom: 20 }}\r\n            >\r\n              {this.listTurn()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Board;\r\n","function countDirection(dir, i, square, width, height) {\r\n  let count = 0;\r\n  const turn = square[i].value;\r\n  let block = 0;\r\n  const mark = [];\r\n  const check = (x, y) => x >= 0 && x < width && (y >= 0 && y < height);\r\n  const countByTrend = trend => {\r\n    let x = i % width;\r\n    let y = Math.floor(i / width);\r\n    let index = i;\r\n    while (\r\n      check(x, y) &&\r\n      square[index] != null &&\r\n      square[index].value === turn\r\n    ) {\r\n      count += 1;\r\n      mark.push(index);\r\n      x += dir[trend][0];\r\n      y += dir[trend][1];\r\n      index = y * width + x;\r\n    }\r\n    if (check(x, y) && square[index] != null && square[index].value !== turn) {\r\n      block += 1;\r\n    }\r\n  };\r\n  countByTrend(0); //  up trend\r\n  countByTrend(1); //  down trend\r\n  count -= 1;\r\n  if (count === 5 && block === 2) return false;\r\n  if (count < 5) return false;\r\n  return mark;\r\n}\r\nfunction haveWinner(square, i, width, height) {\r\n  const myWidth = Number(width);\r\n  const myHeight = Number(height);\r\n  const dir = [\r\n    [[-1, -1], [1, 1]],\r\n    [[0, -1], [0, +1]],\r\n    [[1, -1], [-1, 1]],\r\n    [[-1, 0], [1, 0]]\r\n  ];\r\n  for (let j = 0; j < 4; j += 1) {\r\n    const result = countDirection(dir[j], i, square, myWidth, myHeight);\r\n    if (result !== false)\r\n      // have a winner\r\n      return {\r\n        arr: result,\r\n        dir: j\r\n      };\r\n  }\r\n  return false;\r\n}\r\nexport default haveWinner;\r\n","import React from 'react';\r\nimport Board from './Board';\r\nimport haveWinner from './BusinessLogic';\r\n\r\nconst height = 20;\r\nconst width = 20;\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      square: Array(width * height).fill(null),\r\n      turn: true,\r\n      result: false,\r\n      history: [],\r\n      indexHistory: -1,\r\n      selectedIndex: -1\r\n    };\r\n  }\r\n\r\n  onClick(i) {\r\n    const { square, turn, indexHistory } = this.state;\r\n    let { history, result } = this.state;\r\n    if (!result && square[i] === null) {\r\n      if (indexHistory < history.length - 1) {\r\n        // ĐÁNH TRONG QUÁ KHỨ THÌ CẮT BỎ\r\n        history = history.slice(0, indexHistory + 1);\r\n      }\r\n      square[i] = { value: turn ? 'X' : 'O', dirMark: -1 };\r\n      result = haveWinner(square, i, width, height);\r\n      if (result !== false) {\r\n        result.arr.forEach(j => {\r\n          square[j].dirMark = result.dir;\r\n        });\r\n      }\r\n      history.push({ index: i, turn });\r\n      this.setState({\r\n        square,\r\n        turn: !turn,\r\n        history,\r\n        indexHistory: history.length - 1,\r\n        result: result !== false,\r\n        selectedIndex: i\r\n      });\r\n    }\r\n  }\r\n\r\n  restart() {\r\n    this.setState({\r\n      square: Array(width * height).fill(null),\r\n      turn: true,\r\n      result: false,\r\n      history: [],\r\n      indexHistory: -1,\r\n      isSorted: false\r\n    });\r\n  }\r\n\r\n  amazing(index) {\r\n    const { indexHistory, square, history } = this.state;\r\n    let result = false;\r\n    if (index < 0 || indexHistory === index) return;\r\n    for (let i = 0; i < square.length; i += 1) {\r\n      if (square[i] !== null) {\r\n        square[i].dirMark = -1;\r\n      }\r\n    }\r\n    if (index > indexHistory) {\r\n      for (let i = index; i > indexHistory; i -= 1) {\r\n        square[history[i].index] = {\r\n          value: history[i].turn ? 'X' : 'O',\r\n          dirMark: -1\r\n        };\r\n      }\r\n      result = haveWinner(square, history[index].index, width, height);\r\n      if (result !== false) {\r\n        result.arr.forEach(j => {\r\n          square[j].dirMark = result.dir;\r\n        });\r\n      }\r\n    } else {\r\n      for (let i = index + 1; i <= indexHistory; i += 1) {\r\n        square[history[i].index] = null;\r\n      }\r\n    }\r\n    this.setState({\r\n      indexHistory: index,\r\n      square,\r\n      history,\r\n      turn: !history[index].turn,\r\n      selectedIndex: history[index].index,\r\n      result: result !== false\r\n    });\r\n  }\r\n\r\n  sort() {\r\n    const { isSorted } = this.state;\r\n    this.setState({\r\n      isSorted: !isSorted\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      square,\r\n      turn,\r\n      result,\r\n      history,\r\n      indexHistory,\r\n      selectedIndex,\r\n      isSorted\r\n    } = this.state;\r\n    return (\r\n      <Board\r\n        height={height}\r\n        width={width}\r\n        square={square}\r\n        turn={turn}\r\n        result={result}\r\n        onClick={i => this.onClick(i)}\r\n        restart={() => this.restart()}\r\n        history={history}\r\n        indexHistory={indexHistory}\r\n        amazing={index => this.amazing(index)}\r\n        selectedIndex={selectedIndex}\r\n        isSorted={isSorted}\r\n        sort={() => this.sort()}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Game;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Game from './Components/Game';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}